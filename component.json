{
    "title": "setlist.fm",
    "description": "The setlist.fm API has been designed to give you easy access to setlist data in\norder to build fancy websites and other applications. Before starting to use the\nAPI, be sure to ... 1. ... understand how setlist.fm works (the FAQ [https://www.setlist.fm/faq] \n    and theGuidelines [https://www.setlist.fm/guidelines] are a good starting\n    point),\n 2. ... read this documentation carefully and\n 3. ... apply for an API key [https://www.setlist.fm/settings/api] (link for\n    logged in users only) - if you're no registered user yet, then register\n    first [https://www.setlist.fm/signup] (it's free).\n\n\n\nIf this documentation isn't enough or if you've got other things you'd like to\ntell us about the API, visit theAPI Forum\n[https://www.setlist.fm/forum/setlistfm/setlistfm-api].\n\nNote that the setlist.fm API is, according to the API terms of service\n[https://www.setlist.fm/help/api-terms], only free for non-commercial projects.\nIf you're interested in using the API for commercial purposes,contact us\n[https://www.setlist.fm/contact].\n\nABOUT THIS SERVICE\nThis service provides methods to get both setlists and components of setlists\nsuch as artists, cities, countries or venues.\n\nSUPPORTED CONTENT TYPES\nThe REST service currently supports XML (default) and JSON content.\n\nTo receive a JSON response, set the Acceptheader\n[https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.1] to \napplication/json.\n\nINTERNATIONALIZATION\n(Please note that this is an experimental feature and does not work for all\ncities!)\n\nMost of the featured methods honor the Accept-Languageheader\n[https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4]. This header\nis used for localizing cities and countries. The default language is English\n(en), but you can provide any of the languages Spanish (es), French (fr), German\n(de), Portuguese (pt), Turkish (tr), Italian (it) or Polish (pl).\n\nE.g. if you search a setlist for a concert that took place in Vienna and you\npass \"de\" as header, you'll get \"Wien, Osterreich\" instead of \"Vienna, Austria\".\nThis also works if you use a different language than the country's native\nlanguage.\n\nE.g. for a concert in New York, you'll get \"Nueva York, Estados Unidos\" instead\nof \"New York, United States\" if you pass \"es\" as language.\n\nAPI KEYS\nAPI keys (application form [https://www.setlist.fm/settings/api]) must be\nincluded in the request with the x-api-key header.VERSION HISTORY\nVersionDocsEnd of Service 1.0Docs [/docs/1.0]-0.1December 31, 2017",
    "docsUrl": "",
    "url": "https://api.apis.guru/v2/specs/setlist.fm/1.0/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://api.setlist.fm/rest",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "resource__1_0_artist__mbid__getArtist_GET": {
            "main": "./lib/actions/resource__1_0_artist__mbid__getArtist_GET.js",
            "title": "resource__1.0_artist__mbid__getArtist_GET",
            "description": "Returns an artist for a given Musicbrainz MBID",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_artist__mbid__getArtist_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_artist__mbid__setlists_getArtistSetlists_GET": {
            "main": "./lib/actions/resource__1_0_artist__mbid__setlists_getArtistSetlists_GET.js",
            "title": "resource__1.0_artist__mbid__setlists_getArtistSetlists_GET",
            "description": "Get a list of an artist's setlists.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_artist__mbid__setlists_getArtistSetlists_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_city__geoId__getCity_GET": {
            "main": "./lib/actions/resource__1_0_city__geoId__getCity_GET.js",
            "title": "resource__1.0_city__geoId__getCity_GET",
            "description": "Get a city by its unique geoId.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_city__geoId__getCity_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_search_artists_getArtists_GET": {
            "main": "./lib/actions/resource__1_0_search_artists_getArtists_GET.js",
            "title": "Search for artists.",
            "description": "Search for artists.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_search_artists_getArtists_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_search_cities_getCities_GET": {
            "main": "./lib/actions/resource__1_0_search_cities_getCities_GET.js",
            "title": "Search for a city.",
            "description": "Search for a city.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_search_cities_getCities_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_search_countries_getCountries_GET": {
            "main": "./lib/actions/resource__1_0_search_countries_getCountries_GET.js",
            "title": "Get a complete list of all supported countries.",
            "description": "Get a complete list of all supported countries.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_search_countries_getCountries_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_search_setlists_getSetlists_GET": {
            "main": "./lib/actions/resource__1_0_search_setlists_getSetlists_GET.js",
            "title": "Search for setlists.",
            "description": "Search for setlists.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_search_setlists_getSetlists_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_search_venues_getVenues_GET": {
            "main": "./lib/actions/resource__1_0_search_venues_getVenues_GET.js",
            "title": "Search for venues.",
            "description": "Search for venues.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_search_venues_getVenues_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_setlist_version__versionId__getSetlistVersion_GET": {
            "main": "./lib/actions/resource__1_0_setlist_version__versionId__getSetlistVersion_GET.js",
            "title": "resource__1.0_setlist_version__versionId__getSetlistVersion_GET",
            "description": "Returns a setlist for the given versionId. The setlist returned isn't\nnecessarily the most recent version. E.g. if you pass the versionId of a setlist\nthat got edited since you last accessed it, you'll get the same version as last\ntime.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_setlist_version__versionId__getSetlistVersion_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_setlist__setlistId__getSetlist_GET": {
            "main": "./lib/actions/resource__1_0_setlist__setlistId__getSetlist_GET.js",
            "title": "resource__1.0_setlist__setlistId__getSetlist_GET",
            "description": "Returns the current version of a setlist. E.g. if you pass the id of a setlist\nthat got edited since you last accessed it, you'll get the current version.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_setlist__setlistId__getSetlist_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_user__userId__getUser_GET": {
            "main": "./lib/actions/resource__1_0_user__userId__getUser_GET.js",
            "title": "Get a user by userId.",
            "description": "Get a user by userId.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_user__userId__getUser_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_user__userId__attended_getUserAttendedSetlists_GET": {
            "main": "./lib/actions/resource__1_0_user__userId__attended_getUserAttendedSetlists_GET.js",
            "title": "resource__1.0_user__userId__attended_getUserAttendedSetlists_GET",
            "description": "Get a list of setlists of concerts attended by a user.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_user__userId__attended_getUserAttendedSetlists_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_user__userId__edited_getUserEditedSetlists_GET": {
            "main": "./lib/actions/resource__1_0_user__userId__edited_getUserEditedSetlists_GET.js",
            "title": "resource__1.0_user__userId__edited_getUserEditedSetlists_GET",
            "description": "Get a list of setlists of concerts edited by a user. The list contains the\ncurrent version, not the version edited.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_user__userId__edited_getUserEditedSetlists_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_venue__venueId__getVenue_GET": {
            "main": "./lib/actions/resource__1_0_venue__venueId__getVenue_GET.js",
            "title": "Get a venue by its unique id.",
            "description": "Get a venue by its unique id.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_venue__venueId__getVenue_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "resource__1_0_venue__venueId__setlists_getVenueSetlists_GET": {
            "main": "./lib/actions/resource__1_0_venue__venueId__setlists_getVenueSetlists_GET.js",
            "title": "resource__1.0_venue__venueId__setlists_getVenueSetlists_GET",
            "description": "Get setlists for a specific venue.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/resource__1_0_venue__venueId__setlists_getVenueSetlists_GET.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}